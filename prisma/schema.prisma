// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOWDATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["selectRelationCount"]
}

//Alunos
model Alunos{
  ra Int @id @default(autoincrement())
  telefone String
  senha String
  email String @unique
  nome String
  foto String
  
  idSerie Int
  serie Series @relation(fields: [idSerie], references: [id])
  
  testes TestesAluno[]

  conversas Conversas[]

  atividades AtividadesAluno[]
}

//Séries
model Series {
  id Int @id @default(autoincrement())
  curso Curso
  tipo TipoSerie
  ano String
  periodo Periodo
  sigla String
  
  alunos Alunos[]

  turmas Turmas[]
}

enum Periodo {
  DIURNO
  NOTURNO
}

enum Curso {
  ENFERMAGEM
  EDIFICACOES
  GEODESIA
  INFORMATICA
  MECANICA
  QUALIDADE
}

enum TipoSerie {
  MEDIOTECNICO
  TECNICO
}

//Conversas
model Conversas{
  id Int @id @default(autoincrement())
  mensagem String
  origem OrigemMensagem
  data DateTime @default(now())
  
  rgProfessor String
  professor Professores @relation(fields: [rgProfessor], references: [rg])

  raAluno Int
  aluno Alunos @relation(fields: [raAluno], references: [ra])
}

enum OrigemMensagem {
  PROFESSOR
  ALUNO
}

//Turmas
model Turmas{
  id Int @id @default(autoincrement())
  nome String
  icone String
  corPrim String
  corSec String

  idSerie Int
  serie Series @relation(fields: [idSerie], references: [id])

  rgProfessor String
  professor Professores @relation(fields: [rgProfessor], references: [rg])

  topicos Topicos[]

  atividadesAlunos AtividadesAluno[]

  testesAlunos TestesAluno[]
}

//Professor
model Professores {
  rg String @id
  telefone String
  senha String
  email String @unique
  nome String
  foto String
  
  conversas Conversas[]

  turmas Turmas[]

  arquivoProfessor ArquivosProfessor[]
}

//ArquivosProfessor
model ArquivosProfessor {
  id Int @id @default(autoincrement())
  link String
  nome String
  
  rgProfessor String
  professor Professores @relation(fields: [rgProfessor], references: [rg])
  
  arquivosMateriais ArquivosMateriais[]
  
  arquivosAtividades ArquivosAtividades[]
}

//Tópico
model Topicos {
  id Int @id @default(autoincrement())
  nome String
  descricao String

  idTurma Int
  turma Turmas @relation(fields: [idTurma], references: [id])

  Materiais Materiais[]
  
  atividades Atividades[]
  
  testes Testes[]
}

//Material
model Materiais{
  id Int @id @default(autoincrement())
  data DateTime @default(now())
  conteudo String
  nome String
  
  idTopico Int
  topico Topicos @relation(fields: [idTopico], references: [id])

  arquivosMateriais ArquivosMateriais[]
}

//Atividade
model Atividades {
  id Int @id @default(autoincrement())
  conteudo String
  nome String
  dataInicio DateTime
  dataFim DateTime

  idTopico Int
  topico Topicos @relation(fields: [idTopico], references: [id])
  
  arquivosAtividades ArquivosAtividades[]

  atividadesAlunos AtividadesAluno[]
}

//AtividadeAluno
model AtividadesAluno {
  id Int @id @default(autoincrement())
  dataEnvio DateTime @default(now())
  link String
  nome String
  nota Decimal?
  
  raAluno Int
  aluno Alunos @relation(fields: [raAluno], references: [ra])

  idAtividade Int
  atividade Atividades @relation(fields: [idAtividade], references: [id])

  idTurma Int
  turma Turmas @relation(fields: [idTurma], references: [id])
}

//Teste
model Testes{
  id Int @id @default(autoincrement())
  conteudo String
  dataInicio DateTime
  dataFim DateTime
  
  idTopico Int
  topicos Topicos @relation(fields: [idTopico], references: [id])

  testesAlunos TestesAluno[]
}

//TestesAluno
model TestesAluno{
  id Int @id @default(autoincrement())
  dataEnvio DateTime @default(now())
  nota Decimal

  idTeste Int
  teste Testes @relation(fields: [idTeste], references: [id])

  raAluno Int
  aluno Alunos @relation(fields: [raAluno], references: [ra])

  idTurma Int
  turma Turmas @relation(fields: [idTurma], references: [id])
}

//ArquivosMateriais
model ArquivosMateriais{
  id Int @id @default(autoincrement())

  idArquivoProfessor Int
  arquivoProfessor ArquivosProfessor @relation(fields: [idArquivoProfessor], references: [id])
  
  idMaterial Int
  material Materiais @relation(fields: [idMaterial], references: [id])
}

//ArquivosAtividades
model ArquivosAtividades{
  id Int @id @default(autoincrement())

  idArquivoProfessor Int
  arquivoProfessor ArquivosProfessor @relation(fields: [idArquivoProfessor], references: [id])

  idAtividade Int
  atividades Atividades @relation(fields: [idAtividade], references: [id])
}